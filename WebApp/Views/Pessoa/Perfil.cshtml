
@using Domain
@using Repository.Util
@using WebApp.Models
@using HtmlHelper = WebApp.Models.HtmlHelper
@model Pessoa
@{
    Layout = "~/Views/Shared/_Modal.cshtml";
    var tipo = ViewData["tipo"]!.ToString();
}
@section scripts{
    <script>
        $(function() {
            carregarEstados('#Estado', '#Cidade', '@Html.Raw(Model.Estado)', '@Html.Raw(Model.Cidade)');
            $("#Cep").keyup(function () {
                carregarEndereco($(this), "#Logradouro", "#Bairro", "#Estado", "#Cidade");
            });
        });
    </script>
}
@Html.ValidationSummary(true)
<form asp-action="Perfil" method="post" enctype="multipart/form-data" role="form" class="floating-labels formAsync" id="form_geral" novalidate="">
    <div class="row mt-3">
        <div class="col-md-6">
            <div class="form-group focused has-success">
                @Model.Cpf
                <span class="bar"></span><label><span>Cpf/CNPJl:</span> </label>
                <p class="help-block"></p>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group focused has-success">
                @Model.Email
                <span class="bar"></span><label><span>E-mail:</span></label>
                <p class="help-block"></p>
            </div>
        </div>
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Text, "Nome", Model.Nome, "Nome", "*", "4"))
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Text, "Rg", Model.Rg, "Rg", "", "2", ""))
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Text, "RgEmissor", Model.RgEmissor, "Orgão emissor", "", "2", ""))
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Text, "DataNascimento", Model.DataNascimento, "Nascimento", "", "2", "", "mask_data"))
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Text, "Telefone", Model.Telefone, "Telefone", "", "2", "", "mask_telefone"))
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Text, "Celular", Model.Celular, "Celular", "", "2", "", "mask_celular"))
        <div class="clearfix"></div>
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Text, "Cep", Model.Cep, "Cep", "", "2", "", "mask_cep"))
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Text, "Logradouro", Model.Logradouro, "Logradouro", "", "5"))
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Text, "Numero", Model.Numero, "Número", "", "2", classe: "so-numeros"))
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Text, "Bairro", Model.Bairro, "Bairro", "", "3"))
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Text, "Complemento", Model.Complemento, "Complemento", "", "2"))
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Select, "Estado", Model.Estado, "Estado", "", "2"))
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Select, "Cidade", Model.Cidade, "Cidade", "", "3"))
        @Html.Raw(HtmlHelper.MontaInput(InputTypes.Password, "Senha", tipo == "add" ? Model.Senha : "", "Nova senha", (tipo == "add" ? "*" : ""), "2"))
        @Html.HiddenFor(a => a.IsUsuario)
        @Html.HiddenFor(a => a.IsSuporte)
        <div class="clearfix"></div>
        @Html.HiddenFor(a => a.Id)
        @Html.HiddenFor(a => a.Cpf)
        @Html.HiddenFor(a => a.Email)
        @Html.HiddenFor(a => a.Status)
        @Html.HiddenFor(a => a.Observacao)
        @Html.HiddenFor(a => a.DataCadastro)
        @Html.HiddenFor(a => a.UsuarioCadastro)
        @Html.HiddenFor(a => a.DataAlteracao)
        @Html.HiddenFor(a => a.UsuarioAlteracao)
        @Html.HiddenFor(a => a.Token)
        @Html.HiddenFor(a => a.Foto)
        @Html.Hidden("janela", ViewData["janela"])
        @Html.Hidden("tipo", ViewData["tipo"])
        <div class="col-md-12">
            <button type="submit" class="btn btn-info waves-effect waves-light m-t-10">Salvar</button>
            <input id="continua" name="continua" type="hidden" value=""/>
            <p class="mt-3 text-danger"><strong>Atenção: </strong> Caso você informe uma nova senha, sua senha atual será substituída!</p>
        </div>

    </div>
</form>